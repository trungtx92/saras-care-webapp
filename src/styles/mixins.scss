/*
 * 0: Mixins
 * This .scss loop will create "margin, padding helpers".
 * 
 * 
 * @package sarascare
 */

$primary : #DC4352;
$secondary : #361FA9;
$tertiary : #F3F3FB;
$green : #2DD79C;
$dark : #2c3e50;
$white : #ffffff;

$bradius : .25rem;

$spaceamounts: (0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 80, 100, 150, 200, 250); // Adjust this to include the pixel amounts you need.
$sides: (top, bottom, left, right); // Leave this variable alone

@each $space in $spaceamounts {
    @each $side in $sides {
        .m#{$space}#{str-slice($side, 0, 1)} {
            margin-#{$side}: #{$space}px;
        }

        .p#{$space}#{str-slice($side, 0, 1)} {
            padding-#{$side}: #{$space}px;
        }
    }
}

// @include transition(all .5s ease);
@mixin transition($args...) {		
	-webkit-transition: $args;
	-moz-transition: $args;
	-ms-transition: $args;
	-o-transition: $args;
	transition: $args;
}

// @include transform(translateX(-50%) translateY(-50%) rotate(45deg));
@mixin transform($transform){
	-webkit-transform: $transform;
	-moz-transform: $transform;
	-ms-transform: $transform;
	-o-transform: $transform;
	transform: $transform;
}

/* @include box-shadow(1px,1px,1px,0, #fff, true); */
@mixin box-shadow($top, $left, $blur, $size, $color, $inset: false) {
    @if $inset {
        -webkit-box-shadow:inset $top $left $blur $size $color;
        -moz-box-shadow:inset $top $left $blur $size $color;
        box-shadow:inset $top $left $blur $size $color;
    } @else {
        -webkit-box-shadow: $top $left $blur $size $color;
        -moz-box-shadow: $top $left $blur $size $color;
        box-shadow: $top $left $blur $size $color;
    }
}

// @include bp-sm
@mixin bp-lg {
	@media (max-width: 1199px) {
		@content;
	}
}

@mixin bp-md {
	@media (max-width: 991px) {
		@content;
	}
}

@mixin bp-sm {
	@media (max-width: 767px) {
		@content;
	}
}

@mixin bp-xs {
	@media (max-width: 767px) {
		@content;
	}
}
